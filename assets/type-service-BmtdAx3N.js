import{f as a,g as r,ac as n}from"./index-MZ929h9y.js";class p{constructor(t,e){this.service=t,this.get=e}async getAll(){return(await this.get(this.service)).docs.map(e=>({id:e.id,...e.data()}))}async getAllMap(){const t=new Map;return(await this.get(this.service)).forEach(s=>{t.set(s.id,s.data().name)}),t}}const i=()=>new p(a(r,"platforms"),n),g=()=>i().getAll(),v=()=>i().getAllMap();class h{constructor(t,e){this.service=t,this.get=e}async getAll(){return(await this.get(this.service)).docs.map(e=>({id:e.id,...e.data()}))}async getAllMap(){const t=new Map;return(await this.get(this.service)).forEach(s=>{t.set(s.id,s.data().name)}),t}}const o=()=>new h(a(r,"statuses"),n),A=()=>o().getAll(),S=()=>o().getAllMap();class m{constructor(t,e){this.service=t,this.get=e}async getAll(){return(await this.get(this.service)).docs.map(e=>({id:e.id,...e.data()}))}async getAllMap(){const t=new Map;return(await this.get(this.service)).forEach(s=>{t.set(s.id,s.data().name)}),t}}const l=()=>new m(a(r,"types"),n),M=()=>l().getAll(),d=()=>l().getAllMap();export{M as a,A as b,d as c,v as d,S as e,g as m};
